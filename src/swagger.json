{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Kloutkast Application API",
    "description": "Description API doc",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:4000",
  "basePath": "/v1",
  "tags": [{
      "name": "Authentication",
      "description": "API for authentication in the system"
    },
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "Categories",
      "description": "API for categories in the system"
    },
    {
      "name": "Experiences",
      "description": "API for experiences in the system"
    },
    {
      "name": "Hosts",
      "description": "API for host in the system"
    },
    {
      "name": "Payments",
      "description": "API for payments system host/customers."
    },
    {
      "name": "Search",
      "description": "API for search of hosts/experiences."
    },
    {
      "name": "Tutorials",
      "description": "API for tutorial page."
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "description": "Register new user in system",
        "parameters": [{
          "name": "registerParams",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/registerParams"
          }
        }],
        "produces": ["application/json"],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "description": "login to system",
        "parameters": [{
          "name": "loginParams",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/loginParams"
          }
        }],
        "produces": ["application/json"],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/LoginUser"
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "description": "logout system",
        "parameters": [{
          "name": "logoutParams",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/refreshTokenParams"
          }
        }],
        "produces": ["application/json"],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/refresh-tokens": {
      "post": {
        "tags": ["Authentication"],
        "description": "refresh token of system",
        "parameters": [{
          "name": "refreshTokenParams",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/refreshTokenParams"
          }
        }],
        "produces": ["application/json"],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Tokens"
            }
          }
        }
      }
    },
    "/auth/change-password": {
      "post": {
        "tags": ["Authentication"],
        "description": "change password",
        "parameters": [{
          "in": "header",
          "name": "Authorization",
          "description": "JWT token",
          "required": true,
          "type": "string"
        },
        {
          "name": "changePasswordParams",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/changePasswordParams"
          }
        }],
        "produces": ["application/json"],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": ["Authentication"],
        "description": "fotgot password",
        "parameters": [{
          "name": "forgotPasswordParams",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/forgotPasswordParams"
          }
        }],
        "produces": ["application/json"],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": ["Authentication"],
        "description": "reset password",
        "parameters": [{
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "resetPasswordParams",
            "schema": {
              "$ref": "#/definitions/resetPasswordParams"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/google-login": {
      "post": {
        "tags": ["Authentication"],
        "description": "google login",
        "parameters": [{
          "in": "body",
          "name": "googleLoginParams",
          "schema": {
            "$ref": "#/definitions/googleLoginParams"
          }
        }],
        "produces": ["application/json"],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/LoginUser"
            }
          }
        }
      }
    },
    "/generate/account_link": {
      "get": {
        "tags": ["Payments"],
        "summary": "Get stripe account link for hosts.",
        "parameters": [{
          "in": "header",
          "name": "Authorization",
          "description": "JWT token",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/StringPayload"
            }
          }
        }
      }
    },
    "/charge-generate-intent/experience": {
      "post": {
        "tags": ["Payments"],
        "summary": "Create a payment intent(charge with unique id). This unique id will be used by UI to charge cards.",
        "parameters": [{
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true,
            "type": "string"
          },
          {
            "name": "chargeExperienceParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/chargeExperienceParams"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/StringPayload"
            }
          }
        }
      }
    },
    "/methods/card": {
      "post": {
        "tags": ["Payments"],
        "summary": "Add payment Card to stripe and save in database..",
        "parameters": [{
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true,
            "type": "string"
          },
          {
            "name": "addPaymentCardParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/addPaymentCardParams"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/save-transaction": {
      "post": {
        "tags": ["Payments"],
        "summary": "Save transaction details in database when succsefully completed..",
        "parameters": [{
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true,
            "type": "string"
          },
          {
            "name": "saveTransactionsParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/saveTransactionsParams"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/delete-payment-method": {
      "post": {
        "tags": ["Payments"],
        "summary": "Delete payment method.",
        "parameters": [{
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true,
            "type": "string"
          },
          {
            "name": "deletePaymentMethodParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/deletePaymentMethodParams"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users in system",
        "parameters": [{
          "in": "header",
          "name": "Authorization",
          "description": "JWT token",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "A list of users",
            "schema" : {
              "$ref": "#/definitions/getUsers"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "parameters": [{
        "name": "userId",
        "in": "path",
        "required": true,
        "description": "ID of user that we want to find",
        "type": "string"
      }],
      "get": {
        "tags": ["Users"],
        "summary": "Get user with given ID",
        "parameters": [{
          "in": "header",
          "name": "Authorization",
          "description": "JWT token",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "User object",
            "schema" : {
              "$ref": "#/definitions/getUser"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": ["Users"],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "summary": "Update user with give ID",
        "tags": ["Users"],
        "parameters": [{
          "name": "user",
          "in": "body",
          "description": "User with new values of properties",
          "schema": {
            "$ref": "#/definitions/User"
          }
        }],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "A list of users",
            "schema" : {
              "$ref": "#/definitions/getUsers"
            }
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": ["Categories"],
        "summary": "Create a category",
        "parameters": [{
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/categoryParams"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/categories/search": {
      "get": {
        "tags": ["Categories"],
        "summary": "Search list categories",
        "parameters": [{
          "in": "query",
          "name": "q",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Categories"
            }
          }
        }
      }
    },
    "/experiences": {
      "post": {
        "tags": ["Experiences"],
        "summary": "Create a experience",
        "parameters": [{
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true,
            "type": "string"
          },
          {
            "name": "experienceParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/experienceParams"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "Experience data",
            "schema" : {
              "properties": {
                "savedExperience": {
                  "$ref": "#/definitions/Experience"
                },
                "savedSpecificExperiences": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pushToExperienceMode": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Experiences"],
        "summary": "Get all categories in system",
        "parameters": [],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "A list of experiences",
            "schema" : {
              "$ref": "#/definitions/Experiences"
            }
          }
        }
      }
    },
    "/experiences/updateExperience": {
      "post": {
        "tags": ["Experiences"],
        "summary": "Update a experience",
        "parameters": [{
            "in": "header",
            "name": "Authorization",
            "description": "JWT token",
            "required": true,
            "type": "string"
          },
          {
            "name": "experienceParams",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/updateExperienceParams"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "Experience data",
            "schema" : {
              "properties": {
                "savedExperience": {
                  "$ref": "#/definitions/Experience"
                },
                "savedSpecificExperiences": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pushToExperienceMode": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/experiences/{id}": {
      "parameters": [],
      "get": {
        "tags": ["Experiences"],
        "summary": "Get experience with given ID",
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "Experience object",
            "schema" : {
              "$ref": "#/definitions/getExperienceDetail"
            }
          }
        }
      }
    },
    "/createSpecificExperience/{id}": {
      "parameters": [{
        "name": "id",
        "in": "path",
        "required": true,
        "description": "ID of experiences we want to create",
        "type": "string"
      },
      {
        "name": "startTime",
        "in": "body",
        "required": true,
        "description": "Starting time of experiences we want to create",
        "type": "string"
      },
      {
        "name": "endTime",
        "in": "body",
        "required": true,
        "description": "Ending time of experiences we want to create",
        "type": "string"
      }
    ],
      "post": {
        "tags": ["Experiences"],
        "summary": "Create 40 entries of specific experiences for a given ID. For developer to create entries at ease.",
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "Experience object",
            "schema" : {
              "$ref": "#/definitions/Experience"
            }
          }
        }
      }
    },
    "/rate": {
      "parameters": [{
          "in": "header",
          "name": "Authorization",
          "description": "JWT token",
          "required": true,
          "type": "string"
        },
        {
          "name": "experienceId",
          "in": "body",
          "required": true,
          "description": "ID of the experience they want to rate",
          "type": "string"
        },
        {
          "name": "rating",
          "in": "body",
          "required": true,
          "description": "Rating of the specific experience",
          "type": "number"
        },
        {
          "name": "userId",
          "in": "body",
          "required": true,
          "description": "ID of current user rating experience",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Experiences"],
        "summary": "Rate the specific experience",
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/reserve": {
      "parameters": [{
        "in": "header",
        "name": "Authorization",
        "description": "JWT token",
        "required": true,
        "type": "string"
      },
      {
        "name": "id",
        "in": "body",
        "required": true,
        "description": "ID of the specific experience",
        "type": "string"
      },
      {
        "name": "paymentIntent",
        "in": "body",
        "required": true,
        "description": "Payment Intent from Stripe front end charge method",
        "type": "string"
      },
      {
        "name": "imageUrl",
        "in": "body",
        "required": true,
        "description": "Image URL of the specific experience",
        "type": "string"
      },
      {
        "name": "guests",
        "in": "body",
        "required": true,
        "description": "Number of guests the user is looking to bring",
        "type": "number"
      },
      {
        "name": "userId",
        "in": "body",
        "required": true,
        "description": "ID of current user reserving experience",
        "type": "string"
      }
    ],
      "post": {
        "tags": ["Experiences"],
        "summary": "Reserve a specific experience",
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/reserved/{id}": {
      "parameters": [{
          "in": "header",
          "name": "Authorization",
          "description": "JWT token",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the user",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Experiences"],
        "summary": "Grab all reserved experiences for a user",
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/getReservedBookings"
            }
          }
        }
      }
    },
    "/build": {
      "get": {
        "tags": ["Payments"],
        "summary": "Generate Zoom link for join experience",
        "parameters": [{
          "in": "header",
          "name": "Authorization",
          "description": "JWT token",
          "required": true,
          "type": "string"
        },
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of the user",
          "type": "string"
        }
        ,
        {
          "name": "specificExperienceId",
          "in": "path",
          "required": true,
          "description": "ID of the specificExperience",
          "type": "string"
        }
        ,
        {
          "name": "userRole",
          "in": "path",
          "required": true,
          "description": "role of the user",
          "type": "string"
        }
      ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/StringPayload"
            }
          }
        }
      }
    },
    "/complete": {
      "parameters": [{
        "in": "header",
        "name": "Authorization",
        "description": "JWT token",
        "required": true,
        "type": "string"
      },
      {
        "name": "itemsNeedUpdatedArray",
        "in": "body",
        "required": true,
        "description": "Set completed flag for past experiences",
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    ],
      "post": {
        "tags": ["Experiences"],
        "summary": "Reserve a specific experience",
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/getHostExperiences": {
      "parameters": [{
          "in": "header",
          "name": "Authorization",
          "description": "JWT token",
          "required": true,
          "type": "string"
        },
        {
          "user_id": "id",
          "in": "path",
          "required": true,
          "description": "ID of the user",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Experiences"],
        "summary": "Get hosted experience list",
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/HostExperiences"
            }
          }
        }
      }
    },
    "/experiences/filter": {
      "post": {
        "tags": ["Experiences"],
        "summary": "Filter experience",
        "parameters": [{
          "name": "experienceFilterParams",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/experienceFilterParams"
          }
        }],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "Filter experience",
            "schema": {
              "properties": {
                "experiences": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Experiences"
                  }
                },
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/getUsers"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/experiences/dates/{experienceId}": {
      "parameters": [
        {
          "name": "experienceId",
          "in": "path",
          "required": true,
          "description": "ID of experience that we want to find",
          "type": "string"
        }
      ],
      "post": {
        "tags": ["Experiences"],
        "summary": "Add date availabilities to experience",
        "parameters": [
          {
            "name": "dateAvailabilities",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/dateAvailability"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": ["Experiences"],
        "summary": "Remove date availabilities to experience",
        "parameters": [
          {
            "name": "dateAvailability Ids",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/dateAvailabilityIds"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hosts": {
      "get": {
        "tags": ["Hosts"],
        "summary": "Get all hosts in system",
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Hosts"
            }
          }
        }
      }
    },
    "/hosts/{userId}": {
      "parameters": [{
        "name": "userId",
        "in": "path",
        "required": true,
        "description": "ID of host that we want to find",
        "type": "string"
      }],
      "get": {
        "tags": ["Hosts"],
        "summary": "Get host with given ID",
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/HostDetail"
            }
          }
        }
      }
    },
    "/tutorials": {
      "get": {
        "tags": ["Tutorials"],
        "summary": "Get Tutorials",
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Tutorials"
            }
          }
        }
      },
      "post": {
        "tags": ["Tutorials"],
        "summary": "Create a new tutorial",
        "parameters": [
          {
            "name": "tutorial",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateTutorial"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "tutorials/{tutorialID}": {
      "parameters": [
        {
          "name": "tutorialID",
          "in": "path",
          "required": true,
          "description": "ID of tutorial that we want to find",
          "type": "string"
        }
      ],
      "delete": {
        "tags": ["Tutorials"],
        "summary": "Remove Tutorial By ID",
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/search": {
      "post": {
        "tags": ["Search"],
        "description": "Search experiences and hosts",
        "parameters": [{
            "in": "query",
            "name": "minPrice",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "maxPrice",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "startDay",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "endDay",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "categoryName",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "location",
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Search"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "registerParams": {
      "required": ["fullname", "email", "password"],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "fullname": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "loginParams": {
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        }
      }
    },
    "categoryParams": {
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "chargeExperienceParams": {
      "required": ["experienceID", "payment_type", "amount"],
      "properties": {
        "experienceID": {
          "type": "string"
        },
        "payment_type": {
          "type": "string"
        },
        "amount": {
          "type": "integer"
        }
      }
    },
    "addPaymentCardParams": {
      "required": ["cardExpiryDate", "cardNumber", "cardCVV", "cardFullName"],
      "properties": {
        "cardExpiryDate": {
          "type": "string"
        },
        "cardNumber": {
          "type": "string"
        },
        "cardCVV": {
          "type": "integer"
        },
        "cardFullName": {
          "type": "integer"
        }
      }
    },
    "saveTransactionsParams": {
      "required": ["experienceID", "id"],
      "properties": {
        "id": {
          "type": "string"
        },
        "experienceID": {
          "type": "string"
        }
      }
    },
    "deletePaymentMethodParams": {
      "required": ["payment_method_id"],
      "properties": {
        "payment_method_id": {
          "type": "string"
        }
      }
    },
    "refreshTokenParams": {
      "required": ["refreshToken"],
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "forgotPasswordParams": {
      "required": ["email"],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "resetPasswordParams": {
      "required": ["password"],
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "googleLoginParams": {
      "required": ["code"],
      "properties": {
        "code": {
          "type": "string"
        }
      }
    },
    "changePasswordParams": {
      "required": ["password, newPassword, userId"],
      "properties": {
        "password": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "setFirstPass": {
          "type": "boolean"
        }
      }
    },
    "experienceParams": {
      "required": ["title"],
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "duration": {
          "type": "integer"
        },
        "price": {
          "type": "integer"
        },
        "categoryName": {
          "type": "string"
        },
        "startDay": {
          "type": "string"
        },
        "endDay": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dateAvaibility": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "day": {
                "type": "string"
              },
              "startTime": {
                "type": "string"
              },
              "endTime": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "updateExperienceParams": {
      "required": ["title"],
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "duration": {
          "type": "integer"
        },
        "price": {
          "type": "integer"
        },
        "categoryName": {
          "type": "string"
        },
        "startDay": {
          "type": "string"
        },
        "endDay": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dateAvaibility": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "day": {
                "type": "string"
              },
              "startTime": {
                "type": "string"
              },
              "endTime": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "experienceFilterParams": {
      "required": ["title"],
      "properties": {
        "minPrice": {
          "type": "integer"
        },
        "maxPrice": {
          "type": "integer"
        },
        "startDay": {
          "type": "string"
        },
        "endDay": {
          "type": "string"
        },
        "categoryName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "dateAvailability": {
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "day": {
                "type": "string"
              },
              "startTime": {
                "type": "string"
              },
              "endTime": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "dateAvailabilityIds": {
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "User": {
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "fullname": {
          "type": "string"
        },
        "avatarUrl": {
          "type": "string"
        },
        "categoryName": {
          "type": "string"
        },
        "aboutMe": {
          "type": "string"
        }
      }
    },
    "getUser": {
      "properties": {
        "id": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "fullname": {
          "type": "string"
        },
        "avatarUrl": {
          "type": "string"
        },
        "aboutMe": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "isHost": {
          "type": "boolean"
        },
        "availableMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Card"
          }
        },
        "experiences": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isZoom": {
          "type": "boolean"
        },
        "stripeAccountVerified": {
          "type": "boolean"
        },
        "zoomAccessToken": {
          "type": "string"
        },
        "zoomRefreshToken": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "getUsers": {
      "type": "array",
      "$ref": "#/definitions/getUser"
    },
    "UserAvatar": {
      "properties": {
        "avatar": {
          "type": "file"
        }
      }
    },
    "CreateTutorial" : {
      "properties": {
        "title": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "Experience": {
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "duration": {
          "type": "integer"
        },
        "price": {
          "type": "integer"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "categoryName": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "specificExperience": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Experiences": {
      "type": "array",
      "$ref": "#/definitions/Experience"
    },
    "Error": {
      "required": ["error"],
      "properties": {
        "error": {
          "type": "object",
          "required": ["status", "message"],
          "properties": {
            "status": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            }
          }
        }
      }
    },
    "Token": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "expires": {
          "type": "string"
        }
      }
    },
    "Tokens": {
      "type": "object",
      "properties": {
        "access": {
          "type": "object",
          "$ref": "#/definitions/Token"
        },
        "refresh": {
          "type": "object",
          "$ref": "#/definitions/Token"
        }
      }
    },
    "Card": {
      "properties": {
        "id": {
          "type": "string"
        },
        "cardBrand": {
          "type": "string"
        },
        "expiryMonth": {
          "type": "number"
        },
        "expiryYear": {
          "type": "number"
        },
        "last4digits": {
          "type": "string"
        }
      }
    },
    "Tutorial": {
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "Tutorials": {
      "properties": {
        "error": {
          "type": "object",
          "$ref": "#/definitions/Error"
        },
        "payload": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tutorial"
          }
        }
      }
    },
    "Category": {
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Categories": {
      "properties": {
        "error": {
          "type": "object",
          "$ref": "#/definitions/Error"
        },
        "payload": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Category"
          }
        }
      }
    },
    "CreateUser": {
      "properties": {
        "error": {
          "type": "object",
          "$ref": "#/definitions/Error"
        },
        "payload": {
          "type": "object",
          "properties": {
            "tokens": {
              "type": "object",
              "$ref": "#/definitions/Tokens"
            },
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "fullname": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }, 
                "isHost": {
                  "type": "boolean"
                }, 
                "isZoom": {
                  "type": "boolean"
                }, 
                "status": {
                  "type": "string"
                },
                "experiences": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }, 
                "availableMethods": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Card"
                  }
                }, 
                "createdAt": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "LoginUser": {
      "properties": {
        "error": {
          "type": "object",
          "$ref": "#/definitions/Error"
        },
        "payload": {
          "type": "object",
          "properties": {
            "tokens": {
              "type": "object",
              "$ref": "#/definitions/Tokens"
            },
            "user": {
              "type": "object",
              "$ref": "#/definitions/getUser"
            }
          }
        }
      }
    },
    "Hosts": {
      "properties": {
        "error": {
          "type": "object",
          "$ref": "#/definitions/Error"
        },
        "payload": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "number"
            },
            "page": {
              "type": "number"
            },
            "results": {
              "type": "object",
              "$ref": "#/definitions/getUser"
            }
          }
        }
      }
    },
    "UserDetail": {
      "properties": {
        "id": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "fullname": {
          "type": "string"
        },
        "avatarUrl": {
          "type": "string"
        },
        "aboutMe": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "dateOfBirth": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "isHost": {
          "type": "boolean"
        },
        "availableMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Card"
          }
        },
        "experiences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Experience"
          }
        },
        "isZoom": {
          "type": "boolean"
        },
        "stripeAccountVerified": {
          "type": "boolean"
        },
        "zoomAccessToken": {
          "type": "string"
        },
        "zoomRefreshToken": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "HostDetail": {
      "properties": {
        "error": {
          "type": "object",
          "$ref": "#/definitions/Error"
        },
        "payload": {
          "type": "object",
          "properties": {
            "ratingCount": {
              "type": "number"
            },
            "ratingMark": {
              "type": "number"
            },
            "results": {
              "type": "object",
              "$ref": "#/definitions/UserDetail"
            }
          }
        }
      }
    },
    "Search": {
      "properties": {
        "error": {
          "type": "object",
          "$ref": "#/definitions/Error"
        },
        "payload": {
          "type": "object",
          "properties": {
            "experiences": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Experience"
              }
            },
            "hosts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/getUser"
              }
            }
          }
        }
      }
    },
    "HostExperiences": {
      "properties": {
        "error": {
          "type": "object",
          "$ref": "#/definitions/Error"
        },
        "payload": {
          "type": "object",
          "properties": {
            "experiences": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Experience"
              }
            }
          }
        }
      }
    },
    "StringPayload": {
      "properties": {
        "error": {
          "type": "object",
          "$ref": "#/definitions/Error"
        },
        "payload": {
          "type": "string"
        }
      }
    },
    "ExperienceDetail": {
      "properties": {         
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hostData": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/getUser"
          }
        },
        "duration": {
          "type": "integer"
        },
        "price": {
          "type": "integer"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "categoryName": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "specificExperience": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SpecificExperience"
          }
        }
      }
    },
    "SpecificExperience": {
      "properties": {
        "id": {
          "type": "string"
        },
        "completed": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string"
        },
        "day": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
        },
        "experience": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "usersGoing": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "zoomMeetingId": {
          "type": "string"
        },
        "ratings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reservations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "getExperienceDetail": {
      "properties": {
        "error": {
          "type": "object",
          "$ref": "#/definitions/Error"
        },
        "payload": {
          "type": "object",
          "properties": {
            "experience": {
              "type": "object",
              "$ref": "#/definitions/ExperienceDetail"
            }
          }
        }
      }
    },
    "getReservedBookings": {
      "properties": {
        "error": {
          "type": "object",
          "$ref": "#/definitions/Error"
        },
        "payload": {
          "type": "object",
          "properties": {
            "userBookings": {
              "type": "object",
              "$ref": "#/definitions/SpecificExperience"
            }
          }
        }
      }
    }
  }
}
